# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code, and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: GoRest Api Test Automation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:

    name: Run Lint 
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - name: Cache Node Modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - run: npm ci
    - run: npm run lint

  crud:
    name: Run CRUD Tests
    runs-on: ubuntu-latest

    needs: lint
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - run: npm ci
    - run: npm run test:prod:crud  # Replace with your CRUD test script
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: crud-test-report
        path: test-results/crud/
        retention-days: 8

  full-regression:
    name: Run Regression Tests
    runs-on: ubuntu-latest

    needs: crud
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - run: npm ci
    - run: npm run test:prod:regression  # Replace with your Negative Flow test script
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: regression-test-report
        path: test-results/regression/
        retention-days: 8
